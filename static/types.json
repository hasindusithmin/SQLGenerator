{
    "aba": "Generate an ABA routing transit number.",
    "address": ":example: '791 Crist Parks, Sashabury, IL 86039-9874'",
    "administrative_unit": "None",
    "am_pm": "None",
    "android_platform_token": "Generate an Android platform token used in user agent strings.",
    "ascii_company_email": "None",
    "ascii_email": "None",
    "ascii_free_email": "None",
    "ascii_safe_email": "None",
    "bank_country": "Generate the bank provider's ISO 3166-1 alpha-2 country code.",
    "bban": "Generate a Basic Bank Account Number (BBAN).",
    "boolean": "Generate a random boolean value based on ``chance_of_getting_true``.:sample: chance_of_getting_true= ...",
    "bothify": "Generate a string with each placeholder in ``text`` replaced according to the following rules:- Numb ...",
    "bs": ":example: 'integrate extensible convergence'",
    "building_number": ":example: '791'",
    "catch_phrase": ":example: 'Robust full-range hub'",
    "century": ":example: 'XVII'",
    "chrome": "Generate a Chrome web browser user agent string.",
    "city": ":example: 'Sashabury'",
    "city_prefix": "None",
    "city_suffix": ":example: 'town'",
    "color": "Generate a color in a human-friendly way.Under the hood, this method first creates a color represent ...",
    "color_name": "Generate a color name.",
    "company": ":example: 'Acme Ltd'",
    "company_email": "None",
    "company_suffix": ":example: 'Ltd'",
    "coordinate": "Optionally center the coord and pick a point within radius.",
    "country": "None",
    "country_calling_code": "None",
    "country_code": "None",
    "credit_card_expire": "Generate a credit card expiry date.This method uses |date_time_between| under the hood to generate t ...",
    "credit_card_full": "Generate a set of credit card details.",
    "credit_card_number": "Generate a valid credit card number.",
    "credit_card_provider": "Generate a credit card provider name.",
    "credit_card_security_code": "Generate a credit card security code.",
    "cryptocurrency_code": "None",
    "cryptocurrency_name": "None",
    "csv": "Generate random comma-separated values.For more information on the different arguments of this metho ...",
    "currency_code": "None",
    "currency_name": "None",
    "currency_symbol": ":example: $",
    "current_country": "None",
    "current_country_code": "None",
    "date": "Get a date string between January 1, 1970 and now.:param pattern: Format of the date (year-month-day ...",
    "date_between": "Get a Date object based on a random date between two given dates.Accepts date strings that can be re ...",
    "date_between_dates": "Takes two Date objects and returns a random date between the two given dates.Accepts Date or datetim ...",
    "date_object": "Get a date object between January 1, 1970 and now:example: datetime.date(2016, 9, 20)",
    "date_of_birth": "Generate a random date of birth represented as a Date object,constrained by optional miminimum_age a ...",
    "date_this_century": "Gets a Date object for the current century.:param before_today: include days in current century befo ...",
    "date_this_decade": "Gets a Date object for the decade year.:param before_today: include days in current decade before to ...",
    "date_this_month": "Gets a Date object for the current month.:param before_today: include days in current month before t ...",
    "date_this_year": "Gets a Date object for the current year.:param before_today: include days in current year before tod ...",
    "date_time": "Get a datetime object for a date between January 1, 1970 and now:param tzinfo: timezone, instance of ...",
    "date_time_ad": "Get a datetime object for a date between January 1, 001 and now:param tzinfo: timezone, instance of  ...",
    "date_time_between": "Get a datetime object based on a random date between two given dates.Accepts date strings that can b ...",
    "date_time_between_dates": "Takes two datetime objects and returns a random datetime between the twogiven datetimes.Accepts date ...",
    "date_time_this_century": "Gets a datetime object for the current century.:param before_now: include days in current century be ...",
    "date_time_this_decade": "Gets a datetime object for the decade year.:param before_now: include days in current decade before  ...",
    "date_time_this_month": "Gets a datetime object for the current month.:param before_now: include days in current month before ...",
    "date_time_this_year": "Gets a datetime object for the current year.:param before_now: include days in current year before t ...",
    "day_of_month": "None",
    "day_of_week": "None",
    "dga": "Generates a domain name by given datehttps://en.wikipedia.org/wiki/Domain_generation_algorithm:type  ...",
    "domain_name": "Produce an Internet domain name with the specified number ofsubdomain levels.>>> domain_name()nichol ...",
    "domain_word": "None",
    "dsv": "Generate random delimiter-separated values.This method's behavior share some similarities with ``csv ...",
    "ean": "Generate an EAN barcode of the specified ``length``.The value of ``length`` can only be ``8`` or ``1 ...",
    "ean13": "Generate an EAN-13 barcode.If ``leading_zero`` is ``True``, the leftmost digit of the barcode willbe ...",
    "ean8": "Generate an EAN-8 barcode.This method uses |ean| under the hood with the ``length`` argumentexplicit ...",
    "ein": "Generate a random United States Employer Identification Number (EIN).An United States An Employer Id ...",
    "email": "None",
    "file_extension": "Generate a file extension under the specified ``category``.If ``category`` is ``None``, a random cat ...",
    "file_name": "Generate a random file name with extension.If ``extension`` is ``None``, a random extension will be  ...",
    "file_path": "Generate an pathname to a file.This method uses |file_name| under the hood to generate the file name ...",
    "firefox": "Generate a Mozilla Firefox web browser user agent string.",
    "first_name": "None",
    "first_name_female": "None",
    "first_name_male": "None",
    "first_name_nonbinary": "None",
    "fixed_width": "Generate random fixed width values.Using a list of tuple records that is passed as ``data_columns``, ...",
    "free_email": "None",
    "free_email_domain": "None",
    "future_date": "Get a Date object based on a random date between 1 day from now and agiven date.Accepts date strings ...",
    "future_datetime": "Get a datetime object based on a random date between 1 second form nowand a given date.Accepts date  ...",
    "hex_color": "Generate a color formatted as a hex triplet.",
    "hexify": "Generate a string with each circumflex ('^') in ``text``replaced with a random hexadecimal character ...",
    "hostname": "Produce a hostname with specified number of subdomain levels.>>> hostname()db-01.nichols-phillips.co ...",
    "http_method": "Returns random HTTP methodhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Methods:rtype: str",
    "iana_id": "Returns IANA Registrar IDhttps://www.iana.org/assignments/registrar-ids/registrar-ids.xhtml:rtype: s ...",
    "iban": "Generate an International Bank Account Number (IBAN).",
    "image_url": "Returns URL to placeholder imageExample: http://placehold.it/640x480:param width: Optional image wid ...",
    "internet_explorer": "Generate an IE web browser user agent string.",
    "invalid_ssn": "Generate a random invalid United States Social Security Identification Number (SSN).Invalid SSNs hav ...",
    "ios_platform_token": "Generate an iOS platform token used in user agent strings.",
    "ipv4": "Returns a random IPv4 address or network with a valid CIDR.:param network: Network address:param add ...",
    "ipv4_network_class": "Returns a IPv4 network class 'a', 'b' or 'c'.:returns: IPv4 network class",
    "ipv4_private": "Returns a private IPv4.:param network: Network address:param address_class: IPv4 address class (a, b ...",
    "ipv4_public": "Returns a public IPv4 excluding private blocks.:param network: Network address:param address_class:  ...",
    "ipv6": "Produce a random IPv6 address or network with a valid CIDR",
    "isbn10": "None",
    "isbn13": "None",
    "iso8601": "Get a timestamp in ISO 8601 format (or one of its profiles).:param tzinfo: timezone, instance of dat ...",
    "itin": "Generate a random United States Individual Taxpayer Identification Number (ITIN).An United States In ...",
    "job": "None",
    "json": "Generate random JSON structure values.Using a dictionary or list of records that is passed as ``data ...",
    "language_code": "Generate a random i18n language code (e.g. en).",
    "language_name": "Generate a random i18n language name (e.g. English).",
    "last_name": "None",
    "last_name_female": "None",
    "last_name_male": "None",
    "last_name_nonbinary": "None",
    "latitude": "None",
    "lexify": "Generate a string with each question mark ('?') in ``text``replaced with a random character from ``l ...",
    "license_plate": "Generate a license plate.",
    "linux_platform_token": "Generate a Linux platform token used in user agent strings.",
    "linux_processor": "Generate a Linux processor token used in user agent strings.",
    "locale": "Generate a random underscored i18n locale code (e.g. en_US).",
    "localized_ean": "Generate a localized EAN barcode of the specified ``length``.The value of ``length`` can only be ``8 ...",
    "localized_ean13": "Generate a localized EAN-13 barcode.This method uses |localized_ean| under the hood with the ``lengt ...",
    "localized_ean8": "Generate a localized EAN-8 barcode.This method uses |localized_ean| under the hood with the ``length ...",
    "longitude": "None",
    "mac_address": "None",
    "mac_platform_token": "Generate a MacOS platform token used in user agent strings.",
    "mac_processor": "Generate a MacOS processor token used in user agent strings.",
    "md5": "Generate a random MD5 hash.If ``raw_output`` is ``False`` (default), a hexadecimal string representa ...",
    "military_apo": ":example: 'PSC 5394 Box 3492",
    "military_dpo": ":example: 'Unit 3333 Box 9342'",
    "military_ship": ":example: 'USS'",
    "military_state": ":example: 'APO'",
    "mime_type": "Generate a mime type under the specified ``category``.If ``category`` is ``None``, a random category ...",
    "month": "None",
    "month_name": "None",
    "msisdn": "https://en.wikipedia.org/wiki/MSISDN",
    "name": ":example 'John Doe'",
    "name_female": "None",
    "name_male": "None",
    "name_nonbinary": "None",
    "nic_handle": "Returns NIC Handle IDhttps://www.apnic.net/manage-ip/using-whois/guide/person/:rtype: str",
    "null_boolean": "Generate ``None``, ``True``, or ``False``, each with equal probability.",
    "numerify": "Generate a string with each placeholder in ``text`` replaced accordingto the following rules:- Numbe ...",
    "opera": "Generate an Opera web browser user agent string.",
    "paragraph": "Generate a paragraph.The ``nb_sentences`` argument controls how many sentences the paragraphwill con ...",
    "password": "Generate a random password of the specified ``length``.The arguments ``special_chars``, ``digits``,  ...",
    "past_date": "Get a Date object based on a random date between a given date and 1 dayago.Accepts date strings that ...",
    "past_datetime": "Get a datetime object based on a random date between a given date and 1second ago.Accepts date strin ...",
    "phone_number": "None",
    "port_number": "Returns a network port numberhttps://tools.ietf.org/html/rfc6335:param is_system: System or well-kno ...",
    "postalcode": "None",
    "postalcode_in_state": "None",
    "postalcode_plus4": "None",
    "postcode": ":example: 86039-9874",
    "postcode_in_state": ":returns: A random postcode within the provided state abbreviation:param state_abbr: A state abbrevi ...",
    "prefix": "None",
    "prefix_female": "None",
    "prefix_male": "None",
    "prefix_nonbinary": "None",
    "pricetag": "None",
    "profile": "Generates a complete profile.If \"fields\" is not empty, only the fields in the list will be returned",
    "psv": "Generate random pipe-separated values.For more information on the different arguments of this method ...",
    "pybool": "None",
    "pydecimal": "None",
    "pydict": "Returns a dictionary.:nb_elements: number of elements for dictionary:variable_nb_elements: is use va ...",
    "pyfloat": "None",
    "pyint": "None",
    "pystr": "Generates a random string of upper and lowercase letters.:return: Random of random length between mi ...",
    "pystr_format": "None",
    "pytimezone": "Generate a random timezone (see `faker.timezone` for any args)and return as a python object usable a ...",
    "random_digit": "Generate a random digit (0 to 9).",
    "random_digit_not_null": "Generate a random non-zero digit (1 to 9).",
    "random_digit_not_null_or_empty": "Generate a random non-zero digit (1 to 9) or an empty string.This method will return an empty string ...",
    "random_digit_or_empty": "Generate a random digit (0 to 9) or an empty string.This method will return an empty string 50% of t ...",
    "random_element": "Generate a randomly sampled object from ``elements``.For information on the ``elements`` argument, p ...",
    "random_int": "Generate a random integer between two integers ``min`` and ``max`` inclusivewhile observing the prov ...",
    "random_letter": "Generate a random ASCII letter (a-z and A-Z).",
    "random_lowercase_letter": "Generate a random lowercase ASCII letter (a-z).",
    "random_number": "Generate a random integer according to the following rules:- If ``digits`` is ``None`` (default), it ...",
    "random_uppercase_letter": "Generate a random uppercase ASCII letter (A-Z).",
    "randomize_nb_elements": "Generate a random integer near ``number`` according to the following rules:- If ``le`` is ``False``  ...",
    "rgb_color": "Generate a color formatted as a comma-separated RGB value.",
    "rgb_css_color": "Generate a color formatted as a CSS rgb() function.",
    "ripe_id": "Returns RIPE Organization IDhttps://www.ripe.net/manage-ips-and-asns/db/support/organisation-object- ...",
    "safari": "Generate a Safari web browser user agent string.",
    "safe_color_name": "Generate a web-safe color name.",
    "safe_domain_name": "None",
    "safe_email": "None",
    "safe_hex_color": "Generate a web-safe color formatted as a hex triplet.",
    "secondary_address": "None",
    "sentence": "Generate a sentence.The ``nb_words`` argument controls how many words the sentence willcontain, and  ...",
    "sha1": "Generate a random SHA1 hash.If ``raw_output`` is ``False`` (default), a hexadecimal string represent ...",
    "sha256": "Generate a random SHA256 hash.If ``raw_output`` is ``False`` (default), a hexadecimal string represe ...",
    "simple_profile": "Generates a basic profile with personal informations",
    "slug": "Django algorithm",
    "ssn": "Generate a random United States Taxpayer Identification Number of the specified type.If no type is s ...",
    "state": "None",
    "state_abbr": ":returns: A random state or territory abbreviation.:param include_territories: If True, territories  ...",
    "street_address": ":example: '791 Crist Parks'",
    "street_name": ":example: 'Crist Parks'",
    "street_suffix": ":example: 'Avenue'",
    "suffix": "None",
    "suffix_female": "None",
    "suffix_male": "None",
    "suffix_nonbinary": "None",
    "swift": "Generate a SWIFT code.SWIFT codes, reading from left to right, are composed of a 4 alphabetcharacter ...",
    "swift11": "Generate an 11-digit SWIFT code.This method uses |swift| under the hood with the ``length`` argument ...",
    "swift8": "Generate an 8-digit SWIFT code.This method uses |swift| under the hood with the ``length`` argument  ...",
    "text": "Generate a text string.The ``max_nb_chars`` argument controls the approximate number ofcharacters th ...",
    "time": "Get a time string (24h format by default):param pattern: format:example: '15:02:34'",
    "time_delta": "Get a timedelta object",
    "time_object": "Get a time object:example: datetime.time(15, 56, 56, 772876)",
    "time_series": "Returns a generator yielding tuples of ``(<datetime>, <value>)``.The data points will start at ``sta ...",
    "timezone": "None",
    "tld": "None",
    "tsv": "Generate random tab-separated values.For more information on the different arguments of this method, ...",
    "unix_device": "Generate a Unix device file name.If ``prefix`` is ``None``, a random prefix will be used. The list o ...",
    "unix_partition": "Generate a Unix partition name.This method uses |unix_device| under the hood to create a device file ...",
    "unix_time": "Get a timestamp between January 1, 1970 and now, unless passedexplicit start_datetime or end_datetim ...",
    "upc_a": "Generate a 12-digit UPC-A barcode.The value of ``upc_ae_mode`` controls how barcodes will be generat ...",
    "upc_e": "Generate an 8-digit UPC-E barcode.UPC-E barcodes can be expressed in 6, 7, or 8-digit formats, but t ...",
    "uri": "None",
    "uri_extension": "None",
    "uri_page": "None",
    "uri_path": "None",
    "url": ":param schemes: a list of strings to use as schemes, one will chosen randomly.    If None, it will g ...",
    "user_agent": "Generate a random web browser user agent string.",
    "user_name": "None",
    "uuid4": "Generate a random UUID4 object and cast it to another type if specified using a callable ``cast_to`` ...",
    "windows_platform_token": "Generate a Windows platform token used in user agent strings.",
    "word": "Generate a word.This method uses |words| under the hood with the ``nb`` argument set to``1`` to gene ...",
    "year": "None",
    "zipcode": "None",
    "zipcode_in_state": "None",
    "zipcode_plus4": "None"
}